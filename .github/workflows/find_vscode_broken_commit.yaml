# Build and find out which commit breaks


# https://github.com/microsoft/vscode/wiki/How-to-Contribute
name: Find vscode broken commit
on:
  push:
    paths:
      - ".github/workflows/find_vscode_broken_commit.yaml"
  workflow_dispatch:
    inputs:
      from:
        description: "from"
        default: "HEAD"
        required: true
      depth:
        description: "depth"
        default: 1000
        required: true
        type: number

permissions:
  contents: write
  actions: write

jobs:
    get-commits:
        runs-on: ubuntu-latest
        outputs:
          commits: ${{steps.get_commits.outputs.commits}}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
              repository: microsoft/vscode
              ref:  ${{inputs.from}}
              fetch-depth: ${{inputs.depth||1000}}
    
          - name: Get commits
            id: get_commits
            run: |
              echo "commits=$(git log -n${{inputs.depth||1000}} --format="%H" | awk 'NR % 100==0' | jq -R -s -c 'split("\n") | map(select(length > 0))')">> $GITHUB_OUTPUT

          - name: Test
            run: |
              echo ${{steps.get_commits.outputs.commits}}

          - name: Delete workflow runs
            uses: Mattraks/delete-workflow-runs@v2.0.6
            with:
              delete_workflow_pattern: "Find vscode broken commit"
              retain_days: 0
              keep_minimum_runs: 1

    build:
        needs: get-commits
        runs-on: ubuntu-latest
        strategy:
          matrix:
            commit: ${{fromJson(needs.get-commits.outputs.commits)}}
          fail-fast: true
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
              repository: microsoft/vscode
              ref: ${{matrix.commit}}

          - name: Install dependencies
            run: |
              sudo apt update
              sudo apt install g++ libx11-dev libxkbfile-dev libsecret-1-dev libkrb5-dev

          - name: Build
            run: |
              npm install
              npm run gulp vscode-reh-web-linux-x64-min

          - name: Download cloudflared
            run: |
              echo "Downloading cloudflared"
              CLOUDFLARED_ARCH="amd64"
              CLOUDFLARED_VERSION=$(curl -s -S -H "Authorization: Bearer ${{ github.token }}" https://api.github.com/repos/cloudflare/cloudflared/releases | jq -r .[0].tag_name)
              sudo curl -LkSs https://github.com/cloudflare/cloudflared/releases/download/${CLOUDFLARED_VERSION}/cloudflared-linux-${CLOUDFLARED_ARCH} > /usr/local/bin/cloudflared
              sudo chmod +x /usr/local/bin/cloudflared

          - name: Run code server
            run: |
              curl -LkSs https://github.com/zongou/vscli/raw/refs/heads/main/code > code
              bash ./code patch ${GITHUB_WORKSPACE}/../vscode-reh-web-linux-x64
              ${GITHUB_WORKSPACE}/../vscode-reh-web-linux-x64/bin/code-server-oss --host 0.0.0.0 --without-connection-token &
              cloudflared tunnel --url http://localhost:8000

          # - name: Upload
          #   uses: actions/upload-artifact@main
          #   with:
          #     name: ${{matrix.commit}}
          #     path: ${{matrix.commit}}.tar.xz

          - uses: zongou/run-vscode-server@0.0.3
            name: Run VS Code server to debug
            if: ${{ failure() }}