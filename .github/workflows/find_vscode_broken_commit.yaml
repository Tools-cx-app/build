# Build and find out which commit breaks


# https://github.com/microsoft/vscode/wiki/How-to-Contribute
name: Find vscode broken commit
on:
  push:
    paths:
      - ".github/workflows/find_vscode_broken_commit.yaml"
  workflow_dispatch:
    inputs:
      from:
        description: "from"
        default: "HEAD"
        required: true
      depth:
        description: "depth"
        default: 1000
        required: true
        type: number

permissions:
  contents: write
  actions: write

jobs:
    get-commits:
        runs-on: ubuntu-latest
        outputs:
          commits: ${{steps.get_commits.outputs.commits}}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
              repository: microsoft/vscode
              fetch-depth: ${{inputs.depth||1000}}
    
          - name: Get commits
            id: get_commits
            run: |
              echo "commits=$(git log -n${{inputs.depth||1000}} --format="%H" | awk 'NR % 100==0' | jq -R -s -c 'split("\n") | map(select(length > 0))')">> $GITHUB_OUTPUT

          - name: Test
            run: |
              echo ${{steps.get_commits.outputs.commits}}

          - name: Delete workflow runs
            uses: Mattraks/delete-workflow-runs@v2.0.6
            with:
              delete_workflow_pattern: "Find vscode broken commit"
              retain_days: 0
              keep_minimum_runs: 1

    build:
        needs: get-commits
        runs-on: ubuntu-latest
        strategy:
          matrix:
            commit: ${{fromJson(needs.get-commits.outputs.commits)}}
          fail-fast: true
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
              repository: microsoft/vscode
              ref: ${{matrix.commit}}

          - name: Install dependencies
            run: |
              sudo apt update
              sudo apt install g++ libx11-dev libxkbfile-dev libsecret-1-dev libkrb5-dev

          - name: Build
            run: |
              npm install
              npm run gulp vscode-web

          - name: Build
            run: |
              task=vscode-reh-web-alpine-arm64
              sudo apt install qemu-user-static binfmt-support
              case "${task}" in
              vscode-reh-web-alpine-arm64*)
                ARCH=aarch64
                export npm_config_arch=arm64
                ;;
              vscode-reh-web-linux-alpine*)
                ARCH=x86_64
                export npm_config_arch=${ARCH}
                ;;
              esac
              TARGET=${ARCH}-linux-musl
              echo "Setting up sysroot"
              sudo apt install qemu-user-static binfmt-support
              sudo update-binfmts --enable qemu-aarch64
              SYSROOT="${PWD}/../${ARCH}-alpine"
              export PKG_CONFIG_PATH="${SYSROOT}/usr/lib/pkgconfig"
              if ! test -d "${SYSROOT}"; then
                mkdir -p "${SYSROOT}"
                curl -Lk "https://dl-cdn.alpinelinux.org/alpine/v3.19/releases/${ARCH}/alpine-minirootfs-3.19.1-${ARCH}.tar.gz" | gzip -d | tar -C "${SYSROOT}" -x
                cat <<EOF >"${SYSROOT}/etc/resolv.conf"
              nameserver 8.8.8.8
              nameserver 8.8.4.4
              EOF
                # sudo chroot "${SYSROOT}" sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
                sudo chroot "${SYSROOT}" apk add libx11-dev libxkbfile-dev libsecret-dev krb5-dev libstdc++
              fi
              echo "Setting up toolchain"
              TOOLCHAIN=${PWD}/../${TARGET}-cross
              if ! test -d "${TOOLCHAIN}"; then
                curl -Lk "https://musl.cc/${TARGET}-cross.tgz" | gzip -d | tar -C "$(dirname "${TOOLCHAIN}")" -x
              fi
              case "${ARCH}" in
              x86_64) cp "$(command -v ld)" "${TOOLCHAIN}/bin/${TARGET}-ld" ;;
              esac
              export CC="${TOOLCHAIN}/bin/${TARGET}-gcc --sysroot=${SYSROOT}"
              export CXX="${TOOLCHAIN}/bin/${TARGET}-g++ --sysroot=${SYSROOT}"
              npm_build

          - name: Package output
            run: tar -C "${GITHUB_WORKSPACE}/../" -c vscode-reh-web-alpine-arm64 | xz -T0 > "${{matrix.commit}}.tar.xz"

          - name: Upload
            uses: actions/upload-artifact@main
            with:
              name: ${{matrix.commit}}
              path: ${{matrix.commit}}.tar.xz